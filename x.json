{
  "name": "stream",
  "description": "Streams for ChiÏ‡",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodule/stream.git"
  },
  "dependencies": {
    "pipette": "0.x.x",
    "base64-stream": "~0.1.2"
  },
  "nodes": [
    {
      "dependencies": {
        "npm": {
          "base64-stream": "0.x.x"
        }
      },
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "phrases": {
        "active": "Decoding base64..."
      },
      "description": "Base64 decode stream",
      "ns": "stream",
      "name": "base64Decode",
      "fn": "output.stream = $.create($.stream.pipe(base64_stream.encode()));\n"
    },
    {
      "dependencies": {
        "npm": {
          "base64-stream": "0.x.x"
        }
      },
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "phrases": {
        "active": "Encoding to base64..."
      },
      "description": "Base64 encode stream",
      "ns": "stream",
      "name": "base64Encode",
      "fn": "output.stream = $.create($.stream.pipe(base64_stream.encode()));\n"
    },
    {
      "dependencies": {
        "npm": {
          "zlib": "builtin"
        }
      },
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "phrases": {
        "active": "Deflating..."
      },
      "description": "Deflate pipe",
      "ns": "stream",
      "name": "deflate",
      "fn": "output.stream = $.create($.stream.pipe(zlib.createDeflate()));\n"
    },
    {
      "dependencies": {
        "npm": {
          "zlib": "builtin"
        }
      },
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "phrases": {
        "active": "Gunzipping..."
      },
      "description": "Gunzip pipe",
      "ns": "stream",
      "name": "gunzip",
      "fn": "output.stream = $.create($.stream.pipe(zlib.createGunzip()));\n"
    },
    {
      "dependencies": {
        "npm": {
          "zlib": "builtin"
        }
      },
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "phrases": {
        "active": "Gzipping..."
      },
      "description": "Gzip pipe",
      "ns": "stream",
      "name": "gzip",
      "fn": "output.stream = $.create($.stream.pipe(zlib.createGzip()));\n"
    },
    {
      "dependencies": {
        "npm": {
          "zlib": "builtin"
        }
      },
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "phrases": {
        "active": "Inflating..."
      },
      "description": "Inflate pipe",
      "ns": "stream",
      "name": "inflate",
      "fn": "output.stream = $.create($.stream.pipe(zlib.createInflate()));\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          },
          "error": {
            "title": "Error",
            "type": "object"
          },
          "out": {
            "title": "Buffer",
            "type": "Buffer"
          }
        }
      },
      "phrases": {
        "active": "Listening to stream"
      },
      "description": "Listens for stream data.",
      "ns": "stream",
      "name": "listen",
      "fn": "output = function(cb) {\n\n  cb( { stream: $.get('stream') } );\n\n  $.stream.on('data', function(val) {\n    cb({ out: $.create(val) });\n  });\n\n  $.stream.on('error', function(err) {\n    cb({ error: $.create(err) });\n  });\n};\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "Output",
            "type": "any"
          }
        }
      },
      "expose": [
        "chi"
      ],
      "phrases": {
        "active": "Doing on data..."
      },
      "description": "On Data",
      "ns": "stream",
      "name": "onData",
      "fn": "output = function(cb) {\n  // just an anonymous group now\n  // can just be collect with >=\n  // TODO: sometimes the grouping behavior is wanted\n  // sometimes not, we do not want to group an\n  // ongoing stream..\n  var g = chi.group();\n\n  $.stream.on('data', function(chunk) {\n    cb({\n      out: $.create(chunk)\n    }, g.item());\n  });\n\n  $.stream.on('end', function(chunk) {\n\n    if(chunk) {// not sure if needed\n      cb({ out: $.create(chunk) }, g.item());\n    }\n\n    g.done();\n    done(); // triggers complete.\n  });\n};\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "Output",
            "type": "any"
          }
        }
      },
      "phrases": {
        "active": "Stream is ending..."
      },
      "description": "On End",
      "ns": "stream",
      "name": "onEnd",
      "fn": "output = function(cb) {\n  $.stream.on('end', function(chunk) {\n    cb({ out: $.create(chunk) } );\n    done();\n  });\n};\n"
    },
    {
      "dependencies": {
        "npm": {
          "pipette": "0.x.x"
        }
      },
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "out": {
            "title": "String",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Sinking in"
      },
      "description": "Accepts a stream and converts it back into a string.",
      "ns": "stream",
      "name": "sink",
      "fn": "output = function(cb) {\n  var sink = new pipette.Sink($.stream);\n  sink.on('data', function(val) {\n    cb({ out: $.create(val.toString()) });\n  });\n\n  sink.on('error', function(err) {\n    cb({ error: $.create(err) });\n  });\n};\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Input",
            "type": "any"
          }
        },
        "output": {}
      },
      "expose": [
        "process"
      ],
      "phrases": {
        "active": "Writing to stderr"
      },
      "async": true,
      "description": "Write for stderr",
      "ns": "stream",
      "name": "stderr",
      "fn": "on.input.in = function() {\n  process.stderr.write($.in);\n};\n"
    },
    {
      "ports": {
        "input": {
          "encoding": {
            "title": "Encoding",
            "type": "string",
            "default": "utf-8"
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "expose": [
        "process"
      ],
      "phrases": {
        "active": "Reading stdin..."
      },
      "description": "Read for stdin",
      "ns": "stream",
      "name": "stdin",
      "fn": "// test\nprocess.stdin.resume();\nprocess.stdin.setEncoding($.encoding);\noutput.stream = $.create(process.stdin);\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Input",
            "type": "any"
          }
        },
        "output": {}
      },
      "expose": [
        "process"
      ],
      "phrases": {
        "active": "Writing to stdout..."
      },
      "async": true,
      "description": "Write for stdin",
      "ns": "stream",
      "name": "stdout",
      "fn": "on.input.in = function() {\n  process.stdout.write($.in);\n};\n"
    },
    {
      "dependencies": {
        "npm": {
          "zlib": "builtin"
        }
      },
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "phrases": {
        "active": "Unzipping..."
      },
      "description": "Unzip pipe",
      "ns": "stream",
      "name": "unzip",
      "fn": "output.stream = $.create($.stream.pipe(zlib.createUnzip()))\n"
    }
  ],
  "twigs": []
}