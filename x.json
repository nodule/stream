{
  "name": "stream",
  "description": "Streams for ChiÏ‡",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodule/stream.git"
  },
  "dependencies": {
    "pipette": "0.x.x"
  },
  "nodes": [
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "require": {
        "zlib": "internal"
      },
      "phrases": {
        "active": "Deflating..."
      },
      "description": "Deflate pipe",
      "ns": "stream",
      "name": "deflate",
      "fn": "output.stream = input.stream.pipe(zlib.createDeflate());\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "require": {
        "zlib": "internal"
      },
      "phrases": {
        "active": "Gunzipping..."
      },
      "description": "Gunzip pipe",
      "ns": "stream",
      "name": "gunzip",
      "fn": "output.stream = input.stream.pipe(zlib.createGunzip());\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "require": {
        "zlib": "internal"
      },
      "phrases": {
        "active": "Gzipping..."
      },
      "description": "Gzip pipe",
      "ns": "stream",
      "name": "gzip",
      "fn": "output.stream = input.stream.pipe(zlib.createGzip());\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "require": {
        "zlib": "internal"
      },
      "phrases": {
        "active": "Inflating..."
      },
      "description": "Inflate pipe",
      "ns": "stream",
      "name": "inflate",
      "fn": "output.stream = input.stream.pipe(zlib.createInflate());\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          },
          "error": {
            "title": "Error",
            "type": "object"
          },
          "out": {
            "title": "Buffer",
            "type": "Buffer"
          }
        }
      },
      "phrases": {
        "active": "Listening to stream"
      },
      "description": "Listens for stream data.",
      "ns": "stream",
      "name": "listen",
      "fn": "output = function(cb) {\n\n  cb( { stream: input.stream } );\n\n  input.stream.on('data', function(data) {\n    cb({ out: data });\n  });\n\n  input.stream.on('error', function(err) {\n    cb({ error: err });\n  });\n};\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "out": {
            "title": "String",
            "type": "string"
          }
        }
      },
      "require": {
        "pipette": "0.x.x"
      },
      "phrases": {
        "active": "Sinking in"
      },
      "description": "Accepts a stream and converts it back into a string.",
      "ns": "stream",
      "name": "sink",
      "fn": "output = function(cb) {\n\n  var sink = new pipette.Sink(input.stream);\n  sink.on('data', function(data) {\n    cb({ out: data.toString() });\n  });\n\n  sink.on('error', function(err) {\n    cb({ error: err });\n  });\n};\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "expose": [
        "process"
      ],
      "phrases": {
        "active": "Reading stdin..."
      },
      "description": "Read for stdin",
      "ns": "stream",
      "name": "stdin",
      "fn": "// test\nprocess.stdin.resume();\nprocess.stdin.setEncoding(input.encoding);\noutput.stream = process.stdin;\n"
    },
    {
      "ports": {
        "input": {
          "stream": {
            "title": "Stream",
            "type": "Stream",
            "required": true
          }
        },
        "output": {
          "stream": {
            "title": "Stream",
            "type": "Stream"
          }
        }
      },
      "require": {
        "zlib": "internal"
      },
      "phrases": {
        "active": "Unzipping..."
      },
      "description": "Unzip pipe",
      "ns": "stream",
      "name": "unzip",
      "fn": "output.stream = input.stream.pipe(zlib.createUnzip());\n"
    }
  ],
  "twigs": []
}